The ``0-add_integer`` module
============================

How to use 0-add_integer.py
=============================

This library has one function called ``add_integer()``

First import:
add_integer = __import__('0-add_integer').add_integer.

the functio can now be used to calculate the sum of the arguments passed.
'add_integer()` returns the sum of its arguments. The default argument
for b is 98.

print(add_integer(1, 2))
3

print(add_integer(2))
100

Negative numbers can also be passed as arguments.
print(add_integer(100, -2))
98

Floats can also be passed but will be casted to intergers.

print(add_integer(100.3, -2))
98

If a and b are any type other than int or float, the function will raise a
TypeError exception with the message ``a must be an integer`` or ``b must be an integer.``

    >>> add_integer('9')
    Traceback (most recent call last):
        ...
    TypeError: a must be an integer

    >>> add_integer(4, '9')
    Traceback (most recent call last):
        ...
    TypeError: b must be an integer

    >>> add_integer((3, 5), [2])
    Traceback (most recent call last):
        ...
    TypeError: a must be an integer

